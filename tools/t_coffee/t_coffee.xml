<tool id="t_coffee" name="T-Coffee" version="11.0.8">
    <description>multiple sequence alignment</description>
    <requirements>
        <requirement type="package" version="11.0.8">t_coffee</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" />
    </stdio>
    <version_command>
        t_coffee -version
    </version_command>
    <command>
<![CDATA[
        #if str($input_type.filter_fasta) == 'yes'
            #set $input = '-infile=stdin'
            python '$__tool_directory__/filter_by_fasta_ids.py' '$input_type.identifiers' '$input_type.fasta_input' |
        #end if
        #if $format_output_cigar and not $format_output_fasta_aln
            #set $fasta_aln = 'tmp_fasta_aln.fa'
        #end if
        perl '$__tool_directory__/tcoffee.pl' '$input' $method01 $method02 $method03 '$dnd' '$msf_aln' '$clustalw_aln' '$pir_aln' '$fasta_aln' '$phylip' '$pir_seq' '$fasta_seq' '$score_ascii' '$score_html'
        ## -n_core \${GALAXY_SLOTS:-1}
        #if $format_output_cigar
            && perl '$__tool_directory__/t_coffee_to_cigar.pl' '$fasta_aln' > '$cigar_aln'
        #end if
]]>
    </command>
    <inputs>
        <conditional name="input_type">
            <param name="filter_fasta" type="select" label="Filter FASTA input?">
                <option value="no">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="yes">
                <param name="fasta_input" type="data" format="fasta" label="FASTA sequences" />
                <param name="identifiers" type="data" format="txt" label="List of FASTA sequence IDs" />
            </when>
            <when value="no">
                <param name="input" type="data" format="fasta" label="FASTA sequences" />
            </when>
        </conditional>
        <param name="method01" type="select" display="checkboxes" multiple="true" label="Pairwise Structual Method">
            <option value="sap_pair">sap_pair</option>
            <option value="TMalign_pair">TMalign_pair</option>
            <option value="mustang_pair">mustang_pair</option>
        </param>
        <param name="method02" type="select" display="checkboxes" multiple="true" label="Multiple Sequence Alignment Methods">
            <option value="pcma_msa">pcma_msa</option>
            <option value="clustalw_msa">clustalw_msa</option>
            <option value="dialigntx_msa">dialigntx_msa</option>
            <option value="poa_msa">poa_msa</option>
            <option value="muscle_msa">muscle_msa</option>
            <option value="probcons_msa">probcons_msa</option>
            <option value="t_coffee_msa">t_coffee_msa</option>
            <option value="amap_msa">amap_msa</option>
            <option value="kalign_msa">kalign_msa</option>
        </param>
        <param name="method03" type="select" display="checkboxes" multiple="true" label="Pairwise Sequence Alignment Methods">
            <option value="fast_pair">fast_pair</option>
            <option value="clustalw_pair">clustalw_pair</option>
            <option value="lalign_id_pair">lalign_id_pair</option>
            <option value="slow_pair">slow_pair</option>
            <option value="proba_pair">proba_pair</option>
        </param>
        <param name="format_output_dnd" type="boolean" label="Output newick" />
        <param name="format_output_msf_aln" type="boolean" label="Output msf_aln" />
        <param name="format_output_clustalw_aln" type="boolean" label="Output clustalw_aln" />
        <param name="format_output_pir_aln" type="boolean" label="Output pir_aln" />
        <param name="format_output_fasta_aln" type="boolean" label="Output fasta_aln" />
        <param name="format_output_phylip" type="boolean" label="Output phylip" />
        <param name="format_output_pir_seq" type="boolean" label="Output pir_seq" />
        <param name="format_output_fasta_seq" type="boolean" label="Output fasta_seq" />
        <param name="format_output_score_ascii" type="boolean" label="Output score_ascii" />
        <param name="format_output_score_html" type="boolean" label="Output score_html" />
        <param name="format_output_cigar" type="boolean" label="Output CIGAR" />
    </inputs>
    <outputs>
        <data format="nhx" name="dnd" label="${tool.name} on ${on_string}: newick.dnd" >
            <filter>format_output_dnd is True</filter>
        </data>
        <data format="msf" name="msf_aln" label="${tool.name} on ${on_string}: msf_aln" >
            <filter>format_output_msf_aln is True</filter>
        </data>
        <data format="clustalw" name="clustalw_aln" label="${tool.name} on ${on_string}: clustalw_aln" >
            <filter>format_output_clustalw_aln is True</filter>
        </data>
        <data format="pir" name="pir_aln" label="${tool.name} on ${on_string}: pir_aln" >
            <filter>format_output_pir_aln is True</filter>
        </data>
        <data format="fasta" name="fasta_aln" label="${tool.name} on ${on_string}: fasta_aln" >
            <filter>format_output_fasta_aln is True</filter>
        </data>
        <data format="phyloxml" name="phylip" label="${tool.name} on ${on_string}: phylip" >
            <filter>format_output_phylip is True</filter>
        </data>
        <data format="pir" name="pir_seq" label="${tool.name} on ${on_string}: pir_seq" >
            <filter>format_output_pir_seq is True</filter>
        </data>
        <data format="fasta" name="fasta_seq" label="${tool.name} on ${on_string}: fasta_seq" >
            <filter>format_output_fasta_seq is True</filter>
        </data>
        <data format="ascii" name="score_ascii" label="${tool.name} on ${on_string}: score_ascii" >
            <filter>format_output_score_ascii is True</filter>
        </data>
        <data format="html" name="score_html" label="${tool.name} on ${on_string}: score_html" >
            <filter>format_output_score_html is True</filter>
        </data>
        <data format="tabular" name="cigar_aln" label="${tool.name} on ${on_string}: cigar_aln" >
            <filter>format_output_cigar is True</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="filter_fasta" value="no"/>
            <param name="input" value="input.fasta" ftype= "fasta"/>
            <param name="method02" value="clustalw_msa" />
            <param name="format_output_fasta_aln" value="True"/>
            <output name="fasta_aln" file="output1.fasta" ftype= "fasta"/>
        </test>
        <test>
            <param name="filter_fasta" value="yes"/>
            <param name="fasta_input" value="input.fasta" ftype= "fasta"/>
            <param name="identifiers" value="ids.txt" ftype= "txt"/>
            <param name="method02" value="clustalw_msa" />
            <param name="format_output_fasta_aln" value="True"/>
            <param name="format_output_cigar" value="True"/>
            <output name="fasta_aln" file="output2.fasta" ftype= "fasta"/>
            <output name="cigar_aln" file="cigar.tabular" ftype= "tabular"/>
        </test>
    </tests>
    <help>
**What it does**

This tool is a wrapper for the T-Coffee multiple sequence alignment suite. The input is a set of sequences in FASTA format. Apart from running on the complete FASTA input, it can also run on a subset of sequences by providing a list of the FASTA IDs.

This wrapper offers selected advanced T-Coffee options like the selection of the alignment methods to use: ''Pairwise Structual Method'', ''Multiple Sequence Alignment Methods'' or ''Pairwise Sequence Alignment Methods''.

The T-Coffee documentation can be found at http://www.tcoffee.org/Projects/tcoffee/ .

**Example**

Suppose you have 5 sequences in FASTA format::

    >1aboA
    NLFVALYDFVASGDNTLSITKGEKLRVLGYNHNGEWCEAQTKNGQGWVPS
    NYITPVN
    >1ycsB
    KGVIYALWDYEPQNDDELPMKEGDCMTIIHREDEDEIEWWWARLNDKEGY
    VPRNLLGLYP
    >1pht
    GYQYRALYDYKKEREEDIDLHLGDILTVNKGSLVALGFSDGQEARPEEIG
    WLNGYNETTGERGDFPGTYVEYIGRKKISP
    >1vie
    DRVRKKSGAAWQGQIVGWYCTNLTPEGYAVESEAHPGSVQIYPVAALERI
    N
    >1ihvA
    NFRVYYRDSRDPVWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRD

By selecting "Yes" in output fasta_aln in the wrapper, the user will obtain the multiple alignment in FASTA format::

    >1aboA
    NL-FVA---LYDFVASGDNTLSITKGEKLR-------VLGYN-------H
    NGEWCEA--QTKN-GQGWVPSNYIT------PVN
    >1ycsB
    KGVIYA---LWDYEPQNDDELPMKEGDCMT-------IIHREDE-----D
    EIEWWWA--RLND-KEGYVPRNLLG------LYP
    >1pht
    GYQYRA---LYDYKKEREEDIDLHLGDILTVNKGSLVALGFSDGQEARPE
    EIGWLNGYNETTG-ERGDFPGTYVEYIGRKKISP
    >1vie
    DR-----------VRK--KSGAAWQGQIVGWYCTNLTPEGYAVE------
    ------S--EAHPGSVQIYPVAALE------RIN
    >1ihvA
    NF-RVYYRDSRDPVWKGPA-KLLWKGEGAV-------VIQDN-------S
    DI--------------KVVPRRKAK-----IIRD
    </help>
    <citations>
        <citation type="doi">10.1006/jmbi.2000.4042</citation>
    </citations>
</tool>
